# testing runner

FROM node:16-alpine AS webbuilder

RUN apk update && apk add git make gcc g++ yarn

RUN git clone https://github.com/penguin-statistics/widget-docs /build/widget-docs

WORKDIR /build/widget-docs

RUN yarn install && yarn build

RUN git clone https://github.com/penguin-statistics/widget-frontend /build/widget-frontend

WORKDIR /build/widget-frontend

RUN yarn install && yarn build

FROM golang:1.17-alpine AS base
WORKDIR /app

# builder
FROM base AS gobuilder
ENV GOOS linux
ENV GOARCH amd64
ARG CODECOV_TOKEN

# modules: utilize build cache
COPY go.mod ./
COPY go.sum ./

# RUN go env -w GO111MODULE=on && go env -w GOPROXY=https://goproxy.cn,direct
RUN go mod download
COPY . .

RUN apk add --no-cache libc6-compat

COPY --from=gobuilder /app/widgetbackend /app/widgetbackend
COPY --from=gobuilder /app/config.example.yml /app/config.yml

COPY --from=webbuilder /build/widget-docs/dist /app/widget-docs
COPY --from=webbuilder /build/widget-frontend/dist /app/widget-frontend

ENV WIDGET_BACKEND_STATIC_DOCS_ROOT=/app/widget-docs
ENV WIDGET_BACKEND_STATIC_WIDGET_ROOT=/app/widget-frontend

RUN go test -race -coverprofile=coverage.out -covermode=atomic

RUN curl -Os https://uploader.codecov.io/latest/alpine/codecov \
    chmod +x codecov \
    ./codecov -t $CODECOV_TOKEN
